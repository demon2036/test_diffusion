{

  "FirstStage": {
    "AutoEncoder": {
          target: modules.models.diffEncoder.DiffEncoder,
              optimizer: {
                optimizer: optax.adamw,
                optimizer_configs: {
                  learning_rate: 2.0e-4,
                    b1: 0.9,
                    b2: 0.99
                }
              },
                params: {
                  dim: 64,
                  out_channels: 3,
                  dim_mults: [ 1, 1, 2, 2, 4, 4 ],
                  encoder_type: '2D',
                  latent_type: 'tanh',
                  encoder_configs: {
                    dims: [ 64,128,256,256 ],
                    latent: 2,
                    dtype: 'bfloat16',
                  }
                }
          },
          "Gaussian": {
            target: modules.gaussian.gaussian_test.GaussianTest,
            params: {
              sample_shape: [ 256,256,3 ],
              loss: 'l1',
              timesteps: 1000,
              sampling_timesteps: 200,
              objective: 'predict_x0',
              beta_schedule: 'sigmoid',
              min_snr_loss_weight: True,
              scale_shift: True,
              self_condition: True,
              p_loss: False
            }
          }
  },
  "train": {
      image_size: 256,
      batch_size: 1,
#      file_path: '/root/data/latent2D-16',
      file_path: '/home/hogn/data/FFHQ256',
      data_type: 'img',
      repeat: 1,
      seed: 43,
      total_steps: 3000000,
      sample_steps: 50000,
      save_path: 'result/Diffusion',
      model_path: 'check_points/Diffusion'

  },
  State: {
    target: modules.state_utils.EMATrainState,
    Input_Shape: [ [ 1,32,32,2 ],[ 1, ],[ 1,32,32,2 ] ],
    Model: {
      target: modules.models.unet.Unet,
      params: {
        dim: 128,
        num_res_blocks : [2,2,2,2],
        dim_mults: [ 1,2,4,8 ],
        out_channels: 2,
        dtype: 'bfloat16',
        self_condition: True
        }
    },
    Optimizer: {
      target: optax.adamw,
      params: {
        learning_rate: 1.0e-4,
      }
    },
  },
  "Gaussian": {
    target: modules.gaussian.gaussian.Gaussian,
    params: {
      sample_shape: [32,32,2],
      loss: 'l2',
      timesteps: 1000,
      sampling_timesteps: 200,
      objective: 'predict_v',
      beta_schedule: 'cosine',
      min_snr_loss_weight: True,
      #scale_shift: True,
      self_condition: True,
      p_loss: False,
      mean: -1.3913,
      std: 10.1416,
      clip_x_start: False
    },
  }
}