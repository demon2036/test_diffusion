{
  "FirstStage": {
    "AutoEncoder": {
          target: modules.models.diffEncoder.DiffEncoder,
              optimizer: {
                optimizer: optax.adamw,
                optimizer_configs: {
                  learning_rate: 2.0e-4,
                    b1: 0.9,
                    b2: 0.99
                }
              },
                params: {
                  dim: 64,
                  out_channels: 3,
                  dim_mults: [ 1, 1, 2, 2, 4, 4 ],
                  encoder_type: '2D',
                  latent_type: 'clip',
                  encoder_configs: {
                    dims: [ 64,128,256,256 ],
                    latent: 3,
                    dtype: 'bfloat16',
                  }
                }
          },
      "Gaussian": {
        target: modules.score.elucidateAutoEncoder.ElucidateAutoEncoder,
        params: {
          sample_shape: [ 256,256,3 ],
          loss: 'l2',
          apply_method: modules.models.diffEncoder.DiffEncoder.decode,
        },
      }
  },
  "train": {
      image_size: 256,
      batch_size: 64,
      file_path: '/root/data/FFHQ256',
#      file_path: 'dataraws',
      data_type: 'img',
      repeat: 1,
      seed: 43,
      total_steps: 3000000,
      sample_steps: 10000,
      save_path: 'result/Diffusion',
      model_path: 'check_points/Diffusion'

  },
  State: {
    target: modules.state_utils.EMATrainState,
    Input_Shape: [ [ 1,32,32,4 ],[ 1, ] ],
    Model: {
      target: modules.models.unet.Unet,
      params: {
        dim: 128,
        num_res_blocks : [2,2,2,2],
        dim_mults: [ 1,2,4,4 ],
        out_channels: 4,
        dtype: 'bfloat16',
#        self_condition: True
        }
    },
    Optimizer: {
      target: optax.adamw,
      params: {
        learning_rate: 1.0e-4,
      }
    },
  },
  "Gaussian": {
    target: modules.score.elucidate.ElucidatedDiffusion,
    params: {
      sample_shape: [ 32,32,4 ],
      loss: 'l2',
      sigma_max: 400
    },
  }
}